# This is a basic workflow to help you get started with Actions
name: CI3

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  pi-gen-custom:
    runs-on: ubuntu-latest
    steps:
      # Create a stage 'test-stage' instructing to add Nodesource repo and install nodejs as dependency
      - run: |
          mkdir -p custom-stage/package-docker &&
          {
          cat > custom-stage/package-docker/00-run-chroot.sh <<-EOF
      
          #!/bin/bash
          # Add Docker's official GPG key:
          apt-get update
          apt-get install ca-certificates curl
          install -m 0755 -d /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
          chmod a+r /etc/apt/keyrings/docker.asc
          # Add the repository to Apt sources:
          echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
            $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
            sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          apt-get update
          EOF
          } &&
          chmod +x custom-stage/package-docker/00-run-chroot.sh &&
          cat > test-stage/package-test/01-packages <<-EOF  
          docker-ce
          docker-ce-cli
          containerd.io
          docker-buildx-plugin
          docker-compose-plugin
          EOF
          &&
          {
          cat > custom-stage/prerun.sh <<-EOF
          #!/bin/bash -e
          if [ ! -d "\${ROOTFS_DIR}" ]; then
            copy_previous
          fi
          EOF
          } &&
          chmod +x custom-stage/prerun.sh

      - name: Run pi-gen action
        uses: usimd/pi-gen-action@v1.9.0
        id: build
        with:
          compression: zip
          compression-level: 9
          disable-first-boot-user-rename: 0
          enable-noobs: false
          enable-ssh: 1
          export-last-stage-only: true
          hostname: raspberrypi
          keyboard-keymap: gb
          keyboard-layout: English (UK)
          locale: en_GB.UTF-8
          password: 'pi'
          pi-gen-version: arm64
          release: bookworm
          image-name: custom
          stage-list: stage0 stage1 stage2 ./custom-stage
          timezone: Asia/Kolkata
          username: pi
          verbose-output: false
          wpa-country: 'IN'
          wpa-essid: 'password'
          wpa-password: 'password'

      - uses: actions/upload-artifact@v4.3.4
        with:
          name: pi-gen-image
          path: ${{ steps.build.outputs.image-path }}
